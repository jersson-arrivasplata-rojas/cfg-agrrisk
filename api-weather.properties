# Puerto donde correr el Api
server.port=7102

# EUREKA
eureka.instance.hostname=localhost
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

# Configuración de Redis
#spring.data.redis.host=${REDIS-HOST}

#spring.data.redis.port=${REDIS-PORT}
#spring.data.redis.password=${REDIS-PASSWORD}
#spring.data.redis.database=${REDIS-DATABASE}
spring.data.redis.timeout=60000
# Desactiva la creación automática de repositorios Redis globalmente
spring.data.redis.repositories.enabled=false

# Configuración de MongoDb
#spring.data.mongodb.uri=${MONGODB-URI}

# SWAGGER
openapi.service.title=${spring.application.name}
openapi.service.version=1.0.0
openapi.service.url=http://${eureka.instance.hostname}:7002
springdoc.api-docs.path=/${spring.application.name}/v3/api-docs
springdoc.swagger-ui.path=/${spring.application.name}/swagger-ui.html

# Exponer los endpoints de Actuator incluyendo Prometheus
management.endpoints.web.base-path=/actuator

#Enabling all Actuator endpoints
management.endpoints.web.exposure.include=*

# Habilitar el endpoint de Prometheus
management.endpoint.prometheus.enabled=true

# Configuración de Retry para RedisService
retry.redis.maxAttempts=3
retry.redis.waitDuration=2s

# Clave de API para OpenWeatherMap
openweathermap.api-key=${OPENWEATHERMAP-APIKEY}

# Servicios de OpenWeather
openweathermap.base-url=https://api.openweathermap.org/data/2.5
openweathermap.endpoints.current-weather=/weather
openweathermap.endpoints.forecast-three-hour=/forecast
openweathermap.endpoints.daily-forecast=/forecast/daily
openweathermap.endpoints.one-call=/onecall
openweathermap.endpoints.historical-weather=/timemachine
openweathermap.endpoints.air-pollution=/air_pollution
